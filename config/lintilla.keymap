#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bt_sel_0: bt_select_0 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt_sel 0>, <&bt_clr 0>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_sel_1: bt_select_1 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt_sel 1>, <&bt_clr 1>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_sel_2: bt_select_2 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt_sel 2>, <&bt_clr 2>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_sel_3: bt_select_3 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt_sel 3>, <&bt_clr 3>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_sel_4: bt_select_4 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt_sel 4>, <&bt_clr 4>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        out_tog: out_toggle {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&caps_word>, <&kp CAPS>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        win_ae: win_ae {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&win_ae_low>, <&win_ae_up>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sl_mod: sl_mod {
            compatible = "zmk,behavior-sticky-key";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <3000>;
            ignore-modifiers;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        bt_sel: bt_select {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&out OUT_BLE &macro_param_1to2 &bt BT_SEL MACRO_PLACEHOLDER>;
        };

        bt_clr: bt_clear {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2 &bt BT_SEL MACRO_PLACEHOLDER &bt BT_CLR>;
        };

        win_ellipsis: win_ellipsis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N3 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        win_ae_low: win_ae_low {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        win_ae_up: win_ae_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N9 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_LBKT {
            bindings = <&hm LC(LSHFT) LBKT>;
            key-positions = <17 18>;
            layers = <0>;
            timeout-ms = <30>;
        };

        combo_RBKT {
            bindings = <&hm LC(LSHFT) RBKT>;
            key-positions = <21 22>;
            layers = <0>;
            timeout-ms = <30>;
        };

        combo_elipse {
            bindings = <&win_ellipsis>;
            key-positions = <33 34>;
            layers = <0>;
        };

        combo_mb4 {
            bindings = <&mkp MB4>;
            key-positions = <21 22>;
            layers = <1>;
        };

        combo_mb5 {
            bindings = <&mkp MB5>;
            key-positions = <23 24>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alphas {
            bindings = <
           &win_ae                                                                                                                                                      &win_ae_up
&none      &kp Q       &kp W       &kp F        &kp P        &kp B                                                   &kp J      &kp L        &kp U        &kp Y         &kp SQT     &none
&sl_mod 6  &hm LGUI A  &hm LALT R  &hm LCTRL S  &hm LSHFT T  &kp G                                                   &kp M      &hm LSHFT N  &hm LCTRL E  &hm LALT I    &hm LGUI O  &sl_mod 6
           &kp Z       &hm RALT X  &kp C        &kp D        &kp V                                                   &kp K      &kp H        &kp COMMA    &hm RALT DOT  &kp FSLH
                                                             &lt 2 TAB  &lt 1 SPC  &lt 1 ESC  &lt 5 DEL  &lt 3 BSPC  &lt 4 RET
            >;

            label = "Colemak-dh";
        };

        nav {
            bindings = <
       &none                                                                                                                                  &none
&none  &none     &none     &none      &none      &none                                   &kp LC(Z)     &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp LC(A)  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                                   &u_caps_word  &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT  &none
       &none     &kp RALT  &none      &none      &none                                   &kp INS       &kp HOME     &kp PG_DN    &kp PG_UP    &kp END
                                                 &none  &none  &none  &kp DEL  &kp BSPC  &kp RET
            >;

            label = "Navigation";
        };

        media {
            bindings = <
       &none                                                                                                                                    &none
&none  &none     &none     &none      &none      &none                                      &none       &ind_bat    &ind_con      &none         &none       &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                                      &none       &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none
       &none     &kp RALT  &none      &none      &none                                      &out_tog    &bt_sel_0   &bt_sel_1     &bt_sel_2     &bt_sel_3
                                                 &none  &none  &none  &kp C_STOP  &kp C_PP  &kp C_MUTE
            >;

            label = "Media";
        };

        num {
            bindings = <
       &none                                                                                                                 &none
&none  &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT                                    &none  &none      &none      &none     &none     &none
&none  &kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL                                   &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
       &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH                                    &none  &none      &none      &kp RALT  &none
                                          &kp DOT    &kp N0  &kp MINUS  &none  &none  &none
            >;

            label = "Numbers";
        };

        sym {
            bindings = <
       &none                                                                                                                          &none
&none  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC                                     &none  &none      &none      &none     &none     &none
&none  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                                     &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
       &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE                                     &none  &none      &none      &kp RALT  &none
                                                  &kp LPAR  &kp RPAR  &kp UNDER  &none  &none  &none
            >;

            label = "Sympols";
        };

        fun {
            bindings = <
       &none                                                                                                                              &none
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN                                                  &none  &none      &none      &none     &none     &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK                                                   &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
       &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK                                            &none  &none      &none      &kp RALT  &none
                                        &kp TAB          &kp SPC  &kp K_APPLICATION  &none  &none  &none
            >;

            label = "Function";
        };

        lang {
            bindings = <
       &none                                                                                                &none
&none  &none    &none  &none  &none      &none                              &none  &none      &none  &none  &none  &none
&none  &win_ae  &none  &none  &kp LSHFT  &none                              &none  &kp LSHFT  &none  &none  &none  &none
       &none    &none  &none  &none      &none                              &none  &none      &none  &none  &none
                                         &none  &none  &none  &none  &none  &none
            >;

            label = "Language";
        };
    };
};

// vim: expandtab softtabstop=4 shiftwidth=4 filetype=dts
